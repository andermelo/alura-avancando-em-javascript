{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacaoService","_http","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","adiciona","error","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDAO} from '../DAO/NegociacaoDAO';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n\r\n        this._http = new HttpService();\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n            return this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possível obter as negociações da semana');\r\n                });           \r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n            return this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possível obter as negociações da semana anterior');\r\n                });         \r\n        \r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n            return this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n                });             \r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\r\n    } \r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDAO(connection))\r\n                .then(dao => dao.adiciona(negociacao))\r\n                .then(() => 'negociacao adicionada com sucesso!')\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    throw new Error('nao foi possivel adicionar negociacao')\r\n                });\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDAO(connection))\r\n                .then(dao => dao.listaTodos())\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    throw new Error('Nao foi possivel obter as negociacoes :(')\r\n                })\r\n    }\r\n\r\n    apaga(){\r\n        \r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDAO(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociacoes apagadas com sucesso')\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error('nao foi possivel apagar as negociacoes')\r\n            })\r\n    }\r\n\r\n    importa(listaAtual){\r\n        \r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negociacao => \r\n                    !listaAtual.some(negociacaoExistente => \r\n                        negociacao.isEquals(negociacaoExistente)))\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n                throw new Error('Nao foi possivel buscar negociacoes para importar');\r\n            })\r\n\r\n    }\r\n}\r\n"]}