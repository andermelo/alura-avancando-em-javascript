{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_ordemAtual","_listaNegociacoes","Bind","ListaNegociacoes","NegociacoesView","_mensagem","Mensagem","MensagemView","_service","NegociacaoService","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","error","importa","apaga","esvazia","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","coluna","inverteOrdem","ordena","a","b"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\r\n    constructor() {\r\n        let $ = document.querySelector.bind(document);\r\n\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        this._ordemAtual = ''; // quando a página for carregada, não tem critério. Só passa a ter quando ele começa a clicar nas colunas\r\n        \r\n         this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\r\n\r\n        this._mensagem = new Bind(\r\n            new Mensagem(), new MensagemView($('#mensagemView')),\r\n            'texto');\r\n\r\n        this._ordemAtual = '';\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n         \r\n    }\r\n\r\n    _init() {\r\n\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes => \r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = erro);   \r\n        \r\n        setInterval(() =>{\r\n            this.importaNegociacoes();\r\n        }, 3000);    \r\n    }\r\n    \r\n    adiciona(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let negociacao = this._criaNegociacao();\r\n\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaFormulario();\r\n            })\r\n            .catch(error => this._mensagem.texto = error);           \r\n    }\r\n\r\n    importaNegociacoes(){\r\n\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => {\r\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações do período importadas com sucesso'\r\n              })\r\n            .catch(error => this._mensagem.texto = error); \r\n   \r\n    }\r\n    \r\n    apaga() {\r\n\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch(error => this._mensagem.texto = error);\r\n    }\r\n    \r\n    _criaNegociacao() {\r\n        return new Negociacao(\r\n            DateHelper.textoParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );    \r\n    }\r\n    \r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();   \r\n    }\r\n\r\n    ordena(coluna) {\r\n        if(this._ordemAtual == coluna) {\r\n            this._listaNegociacoes.inverteOrdem();\r\n        } else {\r\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\r\n        }\r\n        this._ordemAtual = coluna\r\n    }\r\n}"]}